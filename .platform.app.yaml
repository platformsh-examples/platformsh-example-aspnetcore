# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/configuration/app-containers.html

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: dotnet:2.2

# The relationships of the application with services or other applications.
# See .platform/services.yaml for the service definitions.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  mysqldb: "mysqldb:mysql"
  rediscache: "rediscache:redis"


# The configuration of app when it is exposed to the web.
web:
  # The executable of the application, as generated by the dotnet publish in the build hook below.
  # Usually `./`, followed by the case-sensitive name of your solution's startup project.
  commands:
    start: './AspNetCore22Test'
    
  locations:
    "/":
      # The folder from which to serve static assets, for this location.
      #
      # This is a filesystem path, relative to the application root.
      root: "wwwroot"

      # Allow/deny access to static files in this location.
      allow: true
        
      # Whether to forward disallowed and missing resources from this
      # location to the application.
      #
      # Can be true of false for dotnet projects.
      passthru: true
      
      rules:
        # Let's serve these common asset types with customs cache headers.
        \.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$:
          allow: true
          expires: 300s


# The process definition for creating the read-only application image.
# This will work as is, most of the time.
hooks:
  build: |
    set -xe
    dotnet publish --self-contained --runtime "$DOTNET_DEFAULT_RUNTIME" --output "$PLATFORM_OUTPUT_DIR"


# These are writable folders mounted over the read-only image of the built application. 
# Use these for static assets and uploads.
mounts:
  "/wwwroot/etc": "shared:files/wwwroot/etc"

# The disk size allocated to (and shared between) mounts.
disk: 512
